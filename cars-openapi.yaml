---
openapi: 3.0.3
info:
  title: Quarkus React Monorepo
  description: Quarkus monorepo demonstrating Panache REST server with PrimeReact
    UI client
  contact:
    name: Melloware
    url: https://melloware.com
    email: mellowaredev@gmail.com
  version: 1.0.0
tags:
- name: Car Resource
  description: CRUD operations for the Car entity.
paths:
  /entity/cars:
    get:
      tags:
      - Car Resource
      parameters:
      - name: request
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponseCar'
    post:
      tags:
      - Car Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        "200":
          description: OK
  /entity/cars/manufacturers:
    get:
      tags:
      - Car Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /entity/cars/{id}:
    get:
      tags:
      - Car Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
    put:
      tags:
      - Car Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
    delete:
      tags:
      - Car Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          minimum: 0
          type: integer
      responses:
        "200":
          description: OK
components:
  schemas:
    Car:
      description: Entity that represents a car.
      required:
      - vin
      - make
      - model
      - year
      - color
      - price
      type: object
      properties:
        id:
          format: int64
          type: integer
        vin:
          description: VIN number
          pattern: \S
          type: string
          example: WVGEF9BP4DD085048
        make:
          description: Manufacturer
          pattern: \S
          type: string
          example: BMW
        model:
          description: Model Number
          pattern: \S
          type: string
          example: 330ix
        year:
          format: int32
          description: Year of manufacture
          minimum: 1960
          type: integer
          example: 1974
        color:
          description: HTML color of the car
          pattern: \S
          type: string
          example: 891d4c
        price:
          description: Price
          minimum: 0
          type: number
          example: 9999.99
    QueryResponseCar:
      type: object
      properties:
        totalRecords:
          format: int64
          type: integer
        records:
          type: array
          items:
            $ref: '#/components/schemas/Car'
